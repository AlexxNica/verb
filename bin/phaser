#!/usr/bin/env node

process.title = 'phaser';

// Node.js
var path = require('path');

// node_modules
var chalk = require('chalk');
var glob = require('globule');
var file = require('fs-utils');
var program = require('commander');
var prompt = require('prompt');

// Local libs
var phaser = require('../index');


/**
 * Have not started working on options yet.
 * I only put this here as a placeholder/
 * reminder in case someone else wants to
 * get to it before me :-)
 */

// var pkg = require('../package.json');
// var version = pkg.version;

// // CLI

// program
//   // .version(version)
//   .usage('[options] [dir]')
//   .option('-f, --file', 'build a specific file.')
//   .option('-d, --directory', 'build an entire directory, globbing patterns optional.')
//   .option('-v, --verbose', 'verbose logging')
//   .parse(process.argv);


// Messages

var success = chalk.green;
var warn    = chalk.yellow;
var error   = chalk.red;

// Defaults
var config = {readme: 'README.tmpl.md'};
var supplied = {};

/**
 * Prepare to hit warp
 */


function render(filepath) {
  var template = path.join(filepath, config.readme);

  // Check for a README template before continuing
  if (!file.exists(template)) {
    console.log(error('README.tmpl.md not found.'));
    return;
  }

  // Run phaser
  var content = file.readFileSync(template);
  var dest = './README.md';
  // if(file.exists(dest)) {
    // TODO: add prompt here, e.g.:
    //
    //  - README already exists, do you want to overwrite it? y/n
    //    [n]: The line must be drawn here! This far, no farther!
    //    [y]: Make it so.
    //
    //  Also add a flag to do this automatically.
  // }

  file.writeFileSync(dest, phaser.process(content).content);
  console.log('\n>> README rendered.\n' + success('>> Completed successfully.'));
};

/**
 * Engage!
 */

if(program.directory) {
  glob.find(program.rawArgs[3] + '/*', {filter: 'isFile'}).map(function(task) {
    require(path.resolve(task));
    console.log(success('Success\n'));
  });
} else if(program.file) {
  glob.find(program.rawArgs[3], {filter: 'isFile'}).map(function(task) {
    require(path.resolve(task));
    console.log(success('Success\n'));
  });
} else {

  // If no path is specified, ask for one.
  if (process.argv.length < 3) {
    try {
      render('docs');
    } catch(e) {
      prompt.message = 'Please supply a source directory';
      prompt.start();
      prompt.get(['path'], function (err, result) {

        /**
         * Make it so
         */
        render(result.path);
      });
    }
  } else {
    try {
      render(process.argv[2]);
    } catch(e) {
      console.warn(error('Phaser cannot find a README template.', e));
    }
  }
}

